---
import Config from '../../config/config.js'

let {section} = Astro.props
let {path   } = Astro.props

let pages  = Config.key ('site.pages')
let tcolor = Config.key ('site.colors.texts.primary')
let rcolor = Config.key ('site.colors.texts.reverse')
let scolor = Config.key ('site.colors.palette.aqua.50')
let links  = Links (pages)

function Links (pages) {
  return [...pages]
    .map (function (page) {
      let label  = page.key ('label')
      let path   = page.key ('path')
      let open   = page.key ('open')
      let active = label == section 
      return { label, path, active, open }
    })
}
---

<div class="top">
  <div class="ui container">
    <div class="column section">
      <a class="link" href={path}>{section}</a>
    </div>
    <div class="links">
      {
        links.map (function (link) {
          let {label}  = link
          let {path}   = link
          let {active} = link
          let {open}   = link
          return (
            <>{ open && <a class="link" active={active} href={path}>{label}</a>}</>
            <>{!open && <span class="link">{label}</span>}</>
          )
        })
      }
    </div>
  </div>
</div>

<style define:vars={{ tcolor, rcolor, scolor }}>
  .top  {
    background      : var(--scolor);
    text-transform  : uppercase;
    line-height     : 60px;
  }
  .top .container {
    display         : flex;
    align-items     : center;
    justify-content : center;
  }
  .top .section { 
    width           : 30%;
    padding         : 0 10px;
  }
  .top .section .link {
    line-height     : 65px;
    font-size       : 18px;
    font-weight     : 900;
    color           : var(--rcolor);
  }
  .top .links { 
    width           : 70%;
    padding         : 0 10px;
  }
  .top .links {
    display         : flex;
    line-height     : 65px;
    font-size       : 16px;
    justify-content : space-between;
  }

  .top .links .link {
    padding         : 0 10px;
    color           : var(--rcolor);
    transition      : all 1s;
  }
  .top .links a:hover {
    color          : var(--tcolor);
    transition     : all 1s; 
  }
  .top .links a[active] {
    color          : var(--tcolor);
    font-weight    : 900;
  }

  @media (max-width: 980px) {
    .top .container {
      display         : block;
    }
    .top .section {
      width           : 100%;
      text-align      : center;
    }
    .top .links {
      width           : 100%;
      font-size       : clamp(10px, 4vw, 16px);
    }
  }

  @media (max-width: 500px) {
    .top .links {
      display         : block;
    }
    .top .links .link {
      display         : block;
      text-align      : center;
    }
  }
</style>