---
import Config from '../../config/config.js'

let { title   } = Astro.props 
let { caption } = Astro.props
let { icon    } = Astro.props
let { image   } = Astro.props
let { mdata   } = Astro.props
let { lead    } = Astro.props
let { path    } = Astro.props
let { draft   } = Astro.props

let tcolor  = Config.key ('site.colors.texts.primary')
let lcolor  = Config.key ('site.colors.lines.secondary')
let hsize   = Config.key ('site.sizes.big')
let csize   = Config.key ('site.sizes.medium')
let tsize   = Config.key ('site.sizes.regular')
---

<div class="left">
  <div class="box">
    <div class="image">
      {draft && <span class="ribon">Próximamente</span>}
      { draft && <img src={image} alt={title}>}
      {!draft && <a href={path}><img src={image} alt={title}></a>}
    </div>
    <div class="text">
      <div class="head">
        <div class="icon"><i class={icon}></i></div>
        <div class="content">
          <div class="title">{title}</div>
          <div class="caption">{caption}</div>
        </div>
      </div>
      <div class="body">
        <div class="mdata">{mdata}</div>
        <div class="lead">{lead}</div>
        <div class="actions">
         { draft && <a class="ui big button disabled" href={path}>Próximamente</a>}
         {!draft && <a class="ui big button" href={path}>Acceder</a>}
        </div>
      </div>
    </div>
  </div>
</div>

<style define:vars={{ tcolor, lcolor, hsize, csize, tsize }}>
  .left {
    display         : flex;
    justify-content : start;
    align-items     : center;
  }
  .box {
    display         : flex;
    justify-content : start;
    align-items     : center;
    width           : 100%;
    margin-top      : 30px;
    padding         : 20px;
    color           : var(--tcolor);
    border          : 1px solid var(--lcolor);
    box-shadow      : 0 1px 2px 0 rgba(34,36,38,.15);
    border-radius   : 5px;
  }
  .box .image {
    position        : relative;
  }
  .box .image .ribon {
    position        : absolute;
    top             : 20px;
    left            : 0;
    padding         : 5px 15px;
    font-size       : 16px;
    color           : #fff;
    background      : #2f8ae0;
    border-top-right-radius    : 15px;
    border-bottom-right-radius : 15px;
    display         : none;
  }
  .box .image img {
    width           : 300px;
    height          : 400px;
    margin-top      : 10px;
    object-fit      : cover !important;
    border-radius   : 3px;
  }
  .box .text .head {
    text-align      : left;
  }
  .box .text .head .icon {
    display         : inline-block;
    margin          : 0 20px;
    font-size       : 70px;
    font-weight     : 200;
  }
  .box .text .head .content {
    display         : inline-block;
  }
  .box .text .head .content .title {
    font-size       : var(--hsize);
    font-weight     : 600;
    line-height     : 1.5;
  }
  .box .text .head .content .caption {
    font-size       : var(--csize);
    font-weight     : 600;
    line-height     : 1.5;
  }
  .box .text .body {
    position        : relative;
    margin          : 20px;
  }
  .box .text .body .mdata {
    font-size       : var(--tsize);
    font-size       : 16px;
    border-top      : 1px dotted #ccc;
    border-bottom   : 1px dotted #ccc;
    padding         : 5px 0;
    line-height     : 1.5;
    text-align      : center;
  }
  .box .text .body .lead {
    height          : 165px;
    margin          : 20px 0;
    font-size       : 18px;
    line-height     : 1.5;
    text-align      : justify;
    overflow        : hidden;
  }
  @media (max-width : 1000px) {
    .box {
      display         : block;
    }
    .box .image img {
      width           : 100%;
      height          : 200px;
    }
  }
  @media (max-width : 715px) {
    .box .text .head .content {
      display         : block;
    }
    .box .text .head .icon  {
      font-size       : 10vw !important;
    }
    .box .text .head .title {
      font-size       : 6vw !important;
    }
    .box .text .head .caption {
      font-size       : 3vw !important;
    }
  }
</style>
